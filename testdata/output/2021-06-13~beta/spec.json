{
  "components": {
    "headers": {
      "DeprecationHeader": {
        "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:\nhttps://tools.ietf.org/id/draft-dalal-deprecation-header-01.html\n",
        "example": "2021-07-01T00:00:00Z",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "LocationHeader": {
        "description": "A header providing a URL for the location of a resource\n",
        "example": "https://example.com/resource/4",
        "schema": {
          "format": "url",
          "type": "string"
        }
      },
      "RequestIdResponseHeader": {
        "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.\n",
        "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "SunsetHeader": {
        "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:\nhttps://datatracker.ietf.org/doc/html/rfc8594\n",
        "example": "2021-08-02T00:00:00Z",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "VersionRequestedResponseHeader": {
        "description": "A header containing the version of the endpoint requested by the caller.",
        "example": "2021-06-04",
        "schema": {
          "$ref": "#/components/schemas/QueryVersion"
        }
      },
      "VersionServedResponseHeader": {
        "description": "A header containing the version of the endpoint that was served by the API.",
        "example": "2021-06-04",
        "schema": {
          "$ref": "#/components/schemas/ActualVersion"
        }
      },
      "VersionStageResponseHeader": {
        "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.\n",
        "schema": {
          "enum": [
            "wip",
            "experimental",
            "beta",
            "ga",
            "deprecated",
            "sunset"
          ],
          "example": "ga",
          "type": "string"
        }
      }
    },
    "parameters": {
      "Pagination": {
        "description": "The parameters used to paginate through a list of results from the API.",
        "in": "query",
        "name": "page",
        "schema": {
          "additionalProperties": false,
          "properties": {
            "after": {
              "type": "string"
            },
            "before": {
              "type": "string"
            },
            "size": {
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "Version": {
        "description": "The requested version of the endpoint to process the request",
        "example": "2021-06-04",
        "in": "query",
        "name": "version",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/QueryVersion"
        }
      }
    },
    "responses": {
      "400": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Bad Request: A parameter provided as a part of the request was invalid.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "401": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "404": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Not Found: The resource being operated on could not be found.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "500": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Internal Server Error: An error was encountered while attempting to process the request.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      }
    },
    "schemas": {
      "ActualVersion": {
        "description": "Resolved API version",
        "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
        "type": "string"
      },
      "Error": {
        "additionalProperties": false,
        "example": {
          "detail": "Not Found",
          "status": "404"
        },
        "properties": {
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "example": "The request was missing these required fields: ...",
            "type": "string"
          },
          "id": {
            "description": "A unique identifier for this particular occurrence of the problem.",
            "example": "f16c31b5-6129-4571-add8-d589da9be524",
            "format": "uuid",
            "type": "string"
          },
          "meta": {
            "additionalProperties": true,
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "source": {
            "additionalProperties": false,
            "example": {
              "pointer": "/data/attributes"
            },
            "properties": {
              "parameter": {
                "description": "A string indicating which URI query parameter caused the error.",
                "example": "param1",
                "type": "string"
              },
              "pointer": {
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                "example": "/data/attributes",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
            "example": "400",
            "pattern": "^[45]\\d\\d$",
            "type": "string"
          }
        },
        "required": [
          "status",
          "detail"
        ],
        "type": "object"
      },
      "ErrorDocument": {
        "additionalProperties": false,
        "example": {
          "errors": [
            {
              "detail": "Permission denied for this resource",
              "status": "403"
            }
          ],
          "jsonapi": {
            "version": "1.0"
          }
        },
        "properties": {
          "errors": {
            "example": [
              {
                "detail": "Permission denied for this resource",
                "status": "403"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "type": "array"
          },
          "jsonapi": {
            "$ref": "#/components/schemas/JsonApi"
          }
        },
        "required": [
          "jsonapi",
          "errors"
        ],
        "type": "object"
      },
      "HelloWorld": {
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "properties": {
              "message": {
                "type": "string"
              },
              "requestSubject": {
                "additionalProperties": false,
                "properties": {
                  "clientId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "publicId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "publicId",
                  "type"
                ],
                "type": "object"
              }
            },
            "required": [
              "message",
              "requestSubject"
            ],
            "type": "object"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "type": "object"
      },
      "JsonApi": {
        "additionalProperties": false,
        "example": {
          "version": "1.0"
        },
        "properties": {
          "version": {
            "description": "Version of the JSON API specification this server supports.",
            "example": "1.0",
            "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$",
            "type": "string"
          }
        },
        "required": [
          "version"
        ],
        "type": "object"
      },
      "LinkProperty": {
        "example": "https://example.com/api/resource",
        "oneOf": [
          {
            "description": "A string containing the link’s URL.",
            "example": "https://example.com/api/resource",
            "type": "string"
          },
          {
            "additionalProperties": false,
            "example": {
              "href": "https://example.com/api/resource"
            },
            "properties": {
              "href": {
                "description": "A string containing the link’s URL.",
                "example": "https://example.com/api/resource",
                "type": "string"
              },
              "meta": {
                "$ref": "#/components/schemas/Meta"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          }
        ]
      },
      "Links": {
        "additionalProperties": false,
        "properties": {
          "first": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "last": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "next": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "prev": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "related": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "self": {
            "$ref": "#/components/schemas/LinkProperty"
          }
        },
        "type": "object"
      },
      "Meta": {
        "additionalProperties": true,
        "description": "Free-form object that may contain non-standard information.",
        "example": {
          "key1": "value1",
          "key2": {
            "sub_key": "sub_value"
          },
          "key3": [
            "array_value1",
            "array_value2"
          ]
        },
        "type": "object"
      },
      "QueryVersion": {
        "description": "Requested API version",
        "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
        "type": "string"
      }
    }
  },
  "info": {
    "title": "Registry",
    "version": "3.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/examples/hello-world": {
      "post": {
        "description": "Create a single result from the hello-world example",
        "operationId": "helloWorldCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "attributes": {
                    "additionalProperties": false,
                    "properties": {
                      "betaField": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "betaField"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "attributes"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HelloWorld"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A hello world entity being requested is returned",
            "headers": {
              "location": {
                "$ref": "#/components/headers/LocationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-snyk-api-owners": [
          "@snyk/api"
        ],
        "x-snyk-api-releases": [
          "2021-06-13~beta"
        ],
        "x-snyk-api-version": "2021-06-13~beta"
      },
      "x-snyk-api-resource": "hello-world"
    },
    "/examples/hello-world/{id}": {
      "get": {
        "description": "Get a single result from the hello-world example",
        "operationId": "helloWorldGetOne",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "$ref": "#/components/parameters/Pagination"
          },
          {
            "description": "The id of the hello-world example entity to be retrieved.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HelloWorld"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A hello world entity being requested is returned",
            "headers": {
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-snyk-api-owners": [
          "@snyk/api"
        ],
        "x-snyk-api-releases": [
          "2021-06-01~experimental",
          "2021-06-07~experimental",
          "2021-06-13~beta"
        ],
        "x-snyk-api-version": "2021-06-13~beta"
      },
      "x-snyk-api-resource": "hello-world"
    },
    "/openapi": {
      "get": {
        "description": "List available versions of OpenAPI specification",
        "operationId": "listAPIVersions",
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List of available versions is returned",
            "headers": {
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/openapi/{version}": {
      "get": {
        "description": "Get OpenAPI specification effective at version.",
        "operationId": "getAPIVersion",
        "parameters": [
          {
            "description": "The requested version of the API",
            "in": "path",
            "name": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OpenAPI specification matching requested version is returned",
            "headers": {
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "Test REST API",
      "url": "https://example.com/api/rest"
    }
  ],
  "tags": [
    {
      "description": "Something",
      "name": "Something"
    }
  ],
  "x-snyk-api-lifecycle": "released",
  "x-snyk-api-version": "2021-06-13~beta"
}