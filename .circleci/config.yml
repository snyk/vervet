version: 2.1

defaults: &defaults
  resource_class: small
  working_directory: ~/vervet
  docker:
    - image: cimg/go:1.19-node

test_vu_defaults: &test_vu_defaults
  resource_class: medium
  machine:
    image: ubuntu-2004:202201-02

vu_metadata: &vu_metadata
    resource_class: small
    working_directory: ~/vervet/vervet-underground
    docker:
      - image: cimg/go:1.17-node

orbs:
  go: circleci/go@1.7.1

commands:
  gcr_auth:
    description: Auth GCR
    steps:
      - setup_remote_docker
      - run:
          name: GCR auth
          command: echo $GCLOUD_GCR_BUILDER | docker login -u _json_key --password-stdin https://gcr.io/snyk-main

jobs:
  test:
    <<: *defaults
    steps:
      - run:
          name: Install spectral
          command: sudo npm install -g @stoplight/spectral@6.0.0-alpha3
      - checkout
      - attach_workspace:
          at: ~/vervet
      - go/mod-download-cached
      - run:
          name: Verify testdata/output up to date
          command: go generate ./testdata
      - run:
          name: Run tests
          command: go test ./... -count=1

  test-vu:
    <<: *test_vu_defaults
    working_directory: ~/vervet/vervet-underground
    steps:
      - checkout:
          path: ~/vervet
      - run:
          name: Install Go
          command: |-
            sudo rm -rf /usr/local/go && curl -sSL -o /tmp/go.tar.gz "https://go.dev/dl/go1.18.4.linux-amd64.tar.gz" && sudo tar -xz -f /tmp/go.tar.gz -C /usr/local
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
      - attach_workspace:
          at: ~/vervet
      - go/mod-download-cached
      - run:
          command: make test

  lint:
    docker:
      - image: golangci/golangci-lint:v1.43.0
    steps:
      - checkout
      - attach_workspace:
          at: ~/vervet
      - run:
          command: golangci-lint run -v ./...

  lint-vu:
    docker:
      - image: golangci/golangci-lint:v1.43.0
    steps:
      - checkout
      - attach_workspace:
          at: ~/vervet
      - run:
          command: cd vervet-underground && golangci-lint run -v ./...

  build-vu:
    <<: *vu_metadata
    steps:
      - checkout:
          path: ~/vervet
      - run:
          name: build go vervet-undergound
          command: make build

  publish-vu:
    <<: *vu_metadata
    steps:
      - checkout:
          path: ~/vervet
      - gcr_auth
      - run:
          name: Build
          command: docker build -t gcr.io/snyk-main/vervet-underground:${CIRCLE_SHA1} .
      - run:
          name: Push
          command: docker push gcr.io/snyk-main/vervet-underground:${CIRCLE_SHA1}

  release:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/vervet
      - run: |-
          go install github.com/caarlos0/svu@latest
          export VERSION=$(svu next)
          if [ -z $(git tag -l ${VERSION}) ]; then
            ./scripts/dist.bash
            ./scripts/release.bash
          fi

workflows:
  version: 2
  test:
    jobs:
      - test:
          name: Test
      - test-vu:
          name: Test VU
      - lint:
          name: Lint
      - lint-vu:
          name: Lint VU

  release:
    jobs:
      - test:
          name: Test
          filters:
            branches:
              only: 'main'
      - build-vu:
          name: Build app
          context: snyk-docker-build
          filters:
            branches:
              only:
                - main
      - release:
          name: Release
          context: nodejs-app-release
          requires:
            - Test
          filters:
            branches:
              only:
                - main
      - publish-vu:
          name: Build and publish image
          context: snyk-docker-build
          requires:
            - Build app
          filters:
            branches:
              only:
                - main
