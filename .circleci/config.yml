version: 2.1

orbs:
  go: circleci/go@1.7.1
  publish: snyk/publish@1
  snyk: snyk/snyk@1

defaults: &defaults
  resource_class: small
  working_directory: ~/vervet
  docker:
    - image: cimg/go:1.20-node

test_vu_defaults: &test_vu_defaults
  resource_class: medium
  machine:
    image: ubuntu-2004:202201-02

vu_defaults: &vu_defaults
  resource_class: small
  working_directory: ~/vervet/vervet-underground
  docker:
    - image: cimg/go:1.20-node
  environment:
    DOCKER_BUILDKIT: 1

ignore_main_branch_filter: &ignore_main_branch_filter
  filters:
    branches:
      ignore:
        - main

only_main_branch_filter: &only_main_branch_filter
  filters:
    branches:
      only:
        - main

commands:
  gcr_auth:
    description: Auth GCR
    steps:
      - setup_remote_docker
      - run:
          name: GCR auth
          command: echo $GCLOUD_GCR_BUILDER | docker login -u _json_key --password-stdin https://gcr.io/snyk-main

  setup_build_remote_docker:
    steps:
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: false

jobs:
  test:
    <<: *defaults
    steps:
      - run:
          name: Install spectral
          command: sudo npm install -g @stoplight/spectral@6.5.0
      - checkout
      - attach_workspace:
          at: ~/vervet
      - go/mod-download-cached
      - run:
          name: Verify testdata/output up to date
          command: go generate ./testdata
      - run:
          name: Run tests
          command: go test ./... -count=1

  test-vu:
    <<: *test_vu_defaults
    working_directory: ~/vervet/vervet-underground
    steps:
      - checkout:
          path: ~/vervet
      - run:
          name: Install Go
          command: |-
            sudo rm -rf /usr/local/go && curl -sSL -o /tmp/go.tar.gz "https://go.dev/dl/go1.20.3.linux-amd64.tar.gz" && sudo tar -xz -f /tmp/go.tar.gz -C /usr/local
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
      - attach_workspace:
          at: ~/vervet
      - go/mod-download-cached
      - run:
          command: make test

  lint:
    docker:
      - image: golangci/golangci-lint:v1.51.0
    steps:
      - checkout
      - attach_workspace:
          at: ~/vervet
      - run:
          command: golangci-lint run -v ./...

  lint-vu:
    docker:
      - image: golangci/golangci-lint:v1.51.0
    steps:
      - checkout
      - attach_workspace:
          at: ~/vervet
      - run:
          command: cd vervet-underground && golangci-lint run -v ./...

  build-vu:
    <<: *vu_defaults
    steps:
      - checkout:
          path: ~/vervet
      - gcr_auth
      - run:
          name: Build Docker Image
          command: make build-docker
      - publish/save-image:
          image_name: vervet-underground

  scan-vu-container:
    <<: *vu_defaults
    steps:
      - setup_build_remote_docker
      - publish/load-image:
          image_name: vervet-underground
      - snyk/scan:
          organization: platform-extensibility
          command: container test
          fail-on-issues: true
          severity-threshold: high
          monitor-on-build: false
          docker-image-name: vervet-underground:${CIRCLE_WORKFLOW_ID}
          token-variable: MONITOR_SNYK_TOKEN

  release:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/vervet
      - run: |-
          go install github.com/caarlos0/svu@latest
          export VERSION=$(svu next)
          if [ -z $(git tag -l ${VERSION}) ]; then
            ./scripts/dist.bash
            ./scripts/release.bash
          fi

workflows:
  version: 2
  CI:
    jobs:
      - test:
          name: Test
          <<: *ignore_main_branch_filter

      - test-vu:
          name: Test VU
          <<: *ignore_main_branch_filter
          
      - lint:
          name: Lint
          <<: *ignore_main_branch_filter

      - lint-vu:
          name: Lint VU
          <<: *ignore_main_branch_filter

      - build-vu:
          name: Build Docker Image
          context: snyk-docker-build
          requires:
            - Test VU
            - Lint VU

      - scan-vu-container:
          name: Scan Container
          context:
            - team-extensibility
          requires:
            - Build Docker Image

  CD:
    jobs:
      - test:
          name: Test
          <<: *only_main_branch_filter
          
      - build-vu:
          name: Build Docker Image
          context: snyk-docker-build
          <<: *only_main_branch_filter

      - release:
          name: Release
          context: nodejs-app-release
          requires:
            - Test

      - publish/publish:
          name: Publish Docker Image
          image_name: vervet-underground
          fedramp: "no"
          snyk_organization: platform-extensibility
          snyk_token_variable: MONITOR_SNYK_TOKEN
          snyk_project_tags: component=pkg:github/snyk/vervet-underground@main,component=pkg:github/snyk/vervet@main
          context:
            - snyk-docker-build
            - infra-publish-orb
            - team-extensibility
            - snyk-bot-slack
          requires:
            - Build Docker Image
